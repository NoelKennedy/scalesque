
using System;

namespace Scalesque {

	//Warning: This file was generated by a T4 template.  Any manual changes you make maybe overwritten when the templating code activates.

	public static class OptionApplicativeFunctors {
		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,TResult>(this Option<T1> t1, Option<T2> t2, Func<T1,T2,TResult> f) {
			return t2.Applicative(t1.Map(f.Curry()));
		}

		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,T3,TResult>(this Option<T1> t1, Option<T2> t2,Option<T3> t3, Func<T1,T2,T3,TResult> f) {
			return t3.Applicative(t2.Applicative(t1.Map(f.Curry())));
		}

		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,T3,T4,TResult>(this Option<T1> t1, Option<T2> t2,Option<T3> t3,Option<T4> t4, Func<T1,T2,T3,T4,TResult> f) {
			return t4.Applicative(t3.Applicative(t2.Applicative(t1.Map(f.Curry()))));
		}

		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,T3,T4,T5,TResult>(this Option<T1> t1, Option<T2> t2,Option<T3> t3,Option<T4> t4,Option<T5> t5, Func<T1,T2,T3,T4,T5,TResult> f) {
			return t5.Applicative(t4.Applicative(t3.Applicative(t2.Applicative(t1.Map(f.Curry())))));
		}

		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,T3,T4,T5,T6,TResult>(this Option<T1> t1, Option<T2> t2,Option<T3> t3,Option<T4> t4,Option<T5> t5,Option<T6> t6, Func<T1,T2,T3,T4,T5,T6,TResult> f) {
			return t6.Applicative(t5.Applicative(t4.Applicative(t3.Applicative(t2.Applicative(t1.Map(f.Curry()))))));
		}

		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,T3,T4,T5,T6,T7,TResult>(this Option<T1> t1, Option<T2> t2,Option<T3> t3,Option<T4> t4,Option<T5> t5,Option<T6> t6,Option<T7> t7, Func<T1,T2,T3,T4,T5,T6,T7,TResult> f) {
			return t7.Applicative(t6.Applicative(t5.Applicative(t4.Applicative(t3.Applicative(t2.Applicative(t1.Map(f.Curry())))))));
		}

		/// <summary>
		/// Implements an applicative functor on Option
		/// </summary>
		public static Option<TResult> ApplicativeFunctor<T1,T2,T3,T4,T5,T6,T7,T8,TResult>(this Option<T1> t1, Option<T2> t2,Option<T3> t3,Option<T4> t4,Option<T5> t5,Option<T6> t6,Option<T7> t7,Option<T8> t8, Func<T1,T2,T3,T4,T5,T6,T7,T8,TResult> f) {
			return t8.Applicative(t7.Applicative(t6.Applicative(t5.Applicative(t4.Applicative(t3.Applicative(t2.Applicative(t1.Map(f.Curry()))))))));
		}

	}
}